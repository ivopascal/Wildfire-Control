Meeting BSc Wildfire control 7-2-2019
Attending: Travis, Ivo, Dirk-Jelle, Ritten
Not attending: Roel Rotteveel
Meeting started at: 13.00

Minutes:
Travis created a git-hub repository.
Travis proposes to write the cell classes.
Ivo proposes to write the UI.

We need:
	Cells
		Cells updating system (active cells set)
	Wind (future)
	Map Generation
	GUI
	Agents
	Define score (future)
	
Ritten proposes to take Agents with actions including:
	Bulldozer agents
		Moving in cardinal directions
		Cutting in cardinal directions
	Burnability

Travis takes cells with Dirk-Jelle:
	Fire value
	Fuel value
	Ignition value
	Traversability
	Type
	Fire propagation 
	

Ivo take GUI with:
	Add function get_cell(x,y) for GUI and agents
	Cells (updated only)
	Start/stop/pause
	Cell tooltips
	Set parameters
	Reset/Regenerate
	
Generation should be done by Roel(to be discussed):
	Area of bush with cirles of forest, expandable with multiple tiles
	One or multiple fire starts
	(If this is too much for now, create a random-pattern with appropriate ratios)

Coding should be done according to MVC pattern.

Max fire speed = 10mph


Meeting BSc Wildfire control 20-2-2019
Attending: Traivs, Ivo, Dirk-Jelle, Ritten, Roel
Not attending: 
Meeting started at: 13.00

The current to-dos soom to be approximating completion (apart from bugs), so we should define the next tasks. 

Feature selection			- Travis
	Downsampling	
	Outlines
	InfoDump


Tune fire parameters		- Dirk-Jelle

Refine map Generation 		- Roel & Dirk-Jelle
	
Fitness						- Ritten

Add Score to gui 			- Ivo
Add Element info on click to GUI - Ivo


Bugfixing					- Everyone


	
Note from Ivo w.r.t. NN library:
http://neuroph.sourceforge.net/javadoc/index.html
http://neuroph.sourceforge.net/javadoc/org/neuroph/core/NeuralNetwork.html#setWeights-double:A- (supports setting weights for CoSyNe)

Meeting BSc Wildfire control 27-2-2019
Attending: Traivs, Ivo, Dirk-Jelle, Ritten, Roel
Not attending: 
Meeting started at: 13.00

An issue was noted where the reset button would regenerate instead. The issue was assigned to be solved by Dirk-Jelle.
An issue was noted that agents sometimes spawn on water. The issue was assigned to be solved by Dirk-Jelle.

We need to: 
	Implement CoSyNe (Ivo)

	Implement A* (Ritten) (to specify, make some function to move an agent from (x,y), to (x',y') according to the fastest route keeping in mind obstacles and movement speed)

	Implement a cost functionfor stationary fire (Travis & Roel)
		Noteable this cost function should give some measure of how enclosed the fire is at any given time. This can be some ratio where the gap of the encircling is defined as the cost.
		This is to be combined with a movement and cutting cost (previously implemented by Ritten)

	A feature class is to be defined where noteable features from the simulation are extracted to be used as inputs for RL/evol learing. For the primary implementation a function can be defined which will give a vector of widthxheightxtypes values where each value is a boolean of whether the cell at x,y, holds algorithm t. (Travis(?))

	Fire should always spawn somewhat centrally (Dirk-Jelle)
	Further bug hunting(?) (Dirk-Jelle)

	Program a way to terminate a simulation after a certain number of actions taken. (Travis(?))

Post meeting realisations: Agent not dying (needs to be added to cost)



Meeting 8-4

NA: Dirk-Jelle
Late: Travis

2 weeks!
Features for ortagonal	-	Roel
	Distance to center
	Distance center - fireline
	Wind-direction 
Ortagonal sub-goal implemtnation	- Ritten
Agent navigation to/between subgoals (straight-path)	- Ivo/Roel
Changing CoSyNe to support off-sets	Ivo
//Static agent start



Meeting 08-05
NA: Dirk-Jelle, Travis, Ivo

Discussed features
    Edit wind feature - Roel
Discussed BresenhamPath
    Ritten will now 'split up' -> continue with deep q learning MLP
Roel and Ivo still have to implement the features in cosyne. test after that
